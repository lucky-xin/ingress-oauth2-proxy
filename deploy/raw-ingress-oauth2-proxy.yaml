# namespace, just for demo and easier cleanup
---
apiVersion: v1
kind: Namespace
metadata:
  name: mac

# aad-proxy deployment, service and ingress
# availables at: https://mac-temp-2021-11-21-auth.mac-blog.org.ua/
# endpoints: /         - home page will show if you are logged in or not
#            /login    - will redirect to azure login
#            /callback - handle login, verify tokens, extract claims, save cookie, redirect to app
#            /logout   - handle logout, removes cookie and redirect user to app
#            /check    - internal, used by ingress to decide whether user logged in or not
# usage:
# after applying aad-proxy just add following annotations to any ingress you wish to protect:
#
#   nginx.ingress.kubernetes.io/auth-url: "https://mac-temp-2021-11-21-auth.mac-blog.org.ua/check"
#   nginx.ingress.kubernetes.io/auth-signin: "https://mac-temp-2021-11-21-auth.mac-blog.org.ua/login"
#   nginx.ingress.kubernetes.io/auth-cache-key: $cookie_id_token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aad-proxy
  namespace: mac
  labels:
    app: aad-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aad-proxy
  template:
    metadata:
      labels:
        app: aad-proxy
    spec:
      containers:
        - name: aad-proxy
          image: mac2000/aad-proxy
          env:
            - name: AAD_CLIEN_ID
              value: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            - name: AAD_CLIEN_SECRET
              value: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
            - name: AAD_TENANT_ID
              value: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            - name: AAD_CALLBACK_URL
              value: https://mac-temp-2021-11-21-auth.mac-blog.org.ua/callback
            - name: AAD_COOKIE_DOMAIN
              value: .mac-blog.org.ua
          ports:
            - name: aad-proxy
              containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: aad-proxy
  namespace: mac
spec:
  type: ClusterIP
  selector:
    app: aad-proxy
  ports:
    - name: aad-proxy
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aad-proxy
  namespace: mac
  annotations:
    # IMPORTANT - azure gives us really big cookies which wont fit into default ingress configs
    # -----------------------------------------------------------------------------------------
    # Fix for: WARNING: Multiple cookies are required for this session as it exceeds the 4kb cookie limit. Please use server side session storage (eg. Redis) instead.
    # Which leads to: Error redeeming code during OAuth2 callback: token exchange failed: oauth2: cannot fetch token: 400 Bad Request
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
spec:
  rules:
    - host: mac-temp-2021-11-21-auth.mac-blog.org.ua
      http:
        paths:
          - pathType: ImplementationSpecific
            path: /
            backend:
              service:
                name: aad-proxy
                port:
                  number: 80
---

# Usage demo, samples app
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  namespace: mac
  labels:
    app: app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
        - name: app1
          image: nginx:alpine
          ports:
            - name: app1
              containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: app1
  namespace: mac
spec:
  type: ClusterIP
  selector:
    app: app1
  ports:
    - name: app1
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app1
  namespace: mac
  annotations:
    # POI: all we need to do to protect any app
    nginx.ingress.kubernetes.io/auth-url: "https://mac-temp-2021-11-21-auth.mac-blog.org.ua/check"
    nginx.ingress.kubernetes.io/auth-signin: "https://mac-temp-2021-11-21-auth.mac-blog.org.ua/login"
    nginx.ingress.kubernetes.io/auth-cache-key: $cookie_id_token
spec:
  rules:
    - host: mac-temp-2021-11-21-app.mac-blog.org.ua
      http:
        paths:
          - pathType: ImplementationSpecific
            path: /
            backend:
              service:
                name: app1
                port:
                  number: 80
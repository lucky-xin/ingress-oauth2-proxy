server {
    server_name d-it-upms-demo.gzv-k8s.xyz.com;

    listen 80  ;
    listen [::]:80  ;
    listen 443  ssl http2 ;
    listen [::]:443  ssl http2 ;

    set $proxy_upstream_name "-";

    ssl_certificate_by_lua_block {
        certificate.call()
    }

    location = /_external-auth-Lw-Prefix {
        internal;

        access_log off;

        # Ensure that modsecurity will not run on an internal location as this is not accessible from outside

        set $tmp_cache_key 'd-it-upms-demo.gzv-k8s.xyz.com/_external-auth-Lw-Prefix$remote_user$http_authorization';
        set $cache_key '';

        rewrite_by_lua_block {
             ngx.var.cache_key = ngx.encode_base64(ngx.sha1_bin(ngx.var.tmp_cache_key))
        }

        proxy_cache auth_cache;
        proxy_cache_valid 401 15s;
        proxy_cache_valid 200 201 202 30m;

        proxy_cache_key "$cache_key";

        # ngx_auth_request module overrides variables in the parent request,
        # therefore we have to explicitly set this variable again so that when the parent request
        # resumes it has the correct value set for this variable so that Lua can pick backend correctly
        set $proxy_upstream_name "dev-xyz-cloud-it-upms-21080";

        proxy_pass_request_body     off;
        proxy_set_header            Content-Length          "";
        proxy_set_header            X-Forwarded-Proto       "";
        proxy_set_header            X-Request-ID            $req_id;

        proxy_set_header            Host                    oauth2-proxy.dev-xyz-cloud.svc.cluster.local;
        proxy_set_header            X-Original-URL          $scheme://$http_host$request_uri;
        proxy_set_header            X-Original-Method       $request_method;
        proxy_set_header            X-Sent-From             "nginx-ingress-controller";
        proxy_set_header            X-Real-IP               $remote_addr;

        proxy_set_header            X-Forwarded-For        $remote_addr;

        proxy_set_header            X-Auth-Request-Redirect $request_uri;
        proxy_buffering                         "on";
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_request_buffering                 on;

        proxy_ssl_server_name       on;
        proxy_pass_request_headers  on;

        client_max_body_size        1m;
        # Pass the extracted client certificate to the auth provider
        proxy_http_version 1.1;
        set $target http://oauth2-proxy.dev-xyz-cloud.svc.cluster.local:80/check;
        proxy_pass $target;
    }

    location @6f6d90e8109a9919b4f5077fa8d4b2538ccd3732 {
        internal;
        add_header Set-Cookie $auth_cookie;
        # Cors Preflight methods needs additional options and different Return Code
        if ($http_origin ~* ((https://[A-Za-z0-9\-]+\.xyz\.ink))$ ) { set $cors 'true'; }
            if ($request_method = 'OPTIONS') {
                set $cors ${cors}options;
                set $cors ${cors}options;
            }
            if ($cors = "true") {
                more_set_headers 'Access-Control-Allow-Origin: $http_origin';
                more_set_headers 'Access-Control-Allow-Credentials: true';
                more_set_headers 'Access-Control-Allow-Methods: GET, PUT, POST, DELETE, PATCH, OPTIONS';
                more_set_headers 'Access-Control-Allow-Headers: DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                more_set_headers 'Access-Control-Max-Age: 1728000';
            }

            if ($cors = "trueoptions") {
                more_set_headers 'Access-Control-Allow-Origin: $http_origin';
                more_set_headers 'Access-Control-Allow-Credentials: true';
                more_set_headers 'Access-Control-Allow-Methods: GET, PUT, POST, DELETE, PATCH, OPTIONS';
                more_set_headers 'Access-Control-Allow-Headers: DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                more_set_headers 'Access-Control-Max-Age: 1728000';
                more_set_headers 'Content-Type: text/plain charset=UTF-8';
                more_set_headers 'Content-Length: 0';
                return 204;
        }

        # Ensure that modsecurity will not run on an internal location as this is not accessible from outside
        return 302 https://d-it-auth-proxy.gzv-k8s.xyz.com/login?redirect_uri=$pass_access_scheme://$http_host$escaped_request_uri;
    }

    location / {

        set $namespace      "dev-xyz-cloud";
        set $ingress_name   "d-it-upms-demo";
        set $service_name   "it-upms";
        set $service_port   "21080";
        set $location_path  "/";
        set $global_rate_limit_exceeding n;

        rewrite_by_lua_block {
            lua_ingress.rewrite({
                    force_ssl_redirect = false,
                    ssl_redirect = true,
                    force_no_ssl_redirect = false,
                    preserve_trailing_slash = false,
                    use_port_in_redirects = false,
                    global_throttle = { namespace = "", limit = 0, window_size = 0, key = { }, ignored_cidrs = { } },
            })
            balancer.rewrite()
            plugins.run()
        }

        # be careful with `access_by_lua_block` and `satisfy any` directives as satisfy any
        # will always succeed when there's `access_by_lua_block` that does not have any lua code doing `ngx.exit(ngx.DECLINED)`
        # other authentication method such as basic auth or external auth useless - all requests will be allowed.
        #access_by_lua_block {
        #}

        header_filter_by_lua_block {
             lua_ingress.header()
             plugins.run()
        }

        body_filter_by_lua_block {
            plugins.run()
        }

        log_by_lua_block {
            balancer.log()
            monitor.call()
            plugins.run()
        }

        port_in_redirect off;

        set $balancer_ewma_score -1;
        set $proxy_upstream_name "dev-xyz-cloud-it-upms-21080";
        set $proxy_host          $proxy_upstream_name;
        set $pass_access_scheme  $scheme;

        set $pass_server_port    $server_port;
        set $best_http_host      $http_host;
        set $pass_port           $pass_server_port;
        set $proxy_alternative_upstream_name "";

        # Cors Preflight methods needs additional options and different Return Code

        if ($http_origin ~* ((https://[A-Za-z0-9\-]+\.xyz\.ink))$ ) { set $cors 'true'; }

        if ($request_method = 'OPTIONS') {
            set $cors ${cors}options;
        }

        if ($cors = "true") {
            more_set_headers 'Access-Control-Allow-Origin: $http_origin';
            more_set_headers 'Access-Control-Allow-Credentials: true';
            more_set_headers 'Access-Control-Allow-Methods: GET, PUT, POST, DELETE, PATCH, OPTIONS';
            more_set_headers 'Access-Control-Allow-Headers: DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            more_set_headers 'Access-Control-Max-Age: 1728000';
        }

        if ($cors = "trueoptions") {
            more_set_headers 'Access-Control-Allow-Origin: $http_origin';
            more_set_headers 'Access-Control-Allow-Credentials: true';
            more_set_headers 'Access-Control-Allow-Methods: GET, PUT, POST, DELETE, PATCH, OPTIONS';
            more_set_headers 'Access-Control-Allow-Headers: DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            more_set_headers 'Access-Control-Max-Age: 1728000';
            more_set_headers 'Content-Type: text/plain charset=UTF-8';
            more_set_headers 'Content-Length: 0';
            return 204;
        }
        # this location requires authentication

        auth_request        /_external-auth-Lw-Prefix;
        auth_request_set    $auth_cookie $upstream_http_set_cookie;
        add_header          Set-Cookie $auth_cookie;
        auth_request_set $authHeader0 $upstream_http_authorization;
        proxy_set_header 'Authorization' $authHeader0;
        auth_request_set $authHeader1 $upstream_http_x_auth_request_user_id;
        proxy_set_header 'X-Auth-Request-User-Id' $authHeader1;
        auth_request_set $authHeader2 $upstream_http_x_auth_request_user_name;
        proxy_set_header 'X-Auth-Request-User-Name' $authHeader2;
        set_escape_uri $escaped_request_uri $request_uri;
        error_page 401 = @6f6d90e8109a9919b4f5077fa8d4b2538ccd3732;
        client_max_body_size                    1m;
        proxy_set_header Host                   $best_http_host;

        # Pass the extracted client certificate to the backend

        # Allow websocket connections
        proxy_set_header                        Upgrade           $http_upgrade;
        proxy_set_header                        Connection        $connection_upgrade;
        proxy_set_header X-Request-ID           $req_id;
        proxy_set_header X-Real-IP              $remote_addr;

        proxy_set_header X-Forwarded-For        $remote_addr;
        proxy_set_header X-Forwarded-Host       $best_http_host;
        proxy_set_header X-Forwarded-Port       $pass_port;
        proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
        proxy_set_header X-Forwarded-Scheme     $pass_access_scheme;
        proxy_set_header X-Scheme               $pass_access_scheme;

        # Pass the original X-Forwarded-For
        proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;

        # mitigate HTTPoxy Vulnerability
        # https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx/
        proxy_set_header Proxy                  "";

        # Custom headers to proxied server

        proxy_connect_timeout                   5s;
        proxy_send_timeout                      60s;
        proxy_read_timeout                      60s;

        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;

        proxy_max_temp_file_size                1024m;

        proxy_request_buffering                 on;
        proxy_http_version                      1.1;

        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;

        # In case of errors try the next upstream server before returning an error
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_connect_timeout                   5s;
        proxy_send_timeout                      60s;
        proxy_read_timeout                      60s;
        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_max_temp_file_size                1024m;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;
        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;

        # In case of errors try the next upstream server before returning an error
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;
        proxy_pass http://upstream_balancer;
        proxy_redirect                          off;
    }
}

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by luchaoxin.
--- DateTime: 2023/12/22 14:31
---

local restOauth2SvcEndpoint = os.getenv("REST_OAUTH2_SVC_ENDPOINT")
local oauth2Username = os.getenv("OAUTH2_USERNAME")
local oauth2Password = os.getenv("OAUTH2_PASSWORD")
local oauth2Authorization = os.getenv("OAUTH2_AUTHORIZATION")
local oauth2GrantType = os.getenv("OAUTH2_GRANT_TYPE")

local accessTokenUrl = string.format("%s/oauth2/token", restOauth2SvcEndpoint)

local json = require("dkjson")
local http = require("socket.http")

local body = string.format("{\"username\":\"%s\",\"password\":\"%s\",\"grant_type\":\"%s\",\"scope\":\"read_write\"}",
        oauth2Username, oauth2Password, oauth2GrantType)
local resp_body = {
    result, resp_code, resp_headers, resp_status = http.request {
        method = "POST",
        url = accessTokenUrl,
        source = ltn12.source.string(body),
        headers = {
            ["Content-Type"] = "application/json",
            ["Content-Length"] = tostring(#body),
            ["Authorization"] = oauth2Authorization
        },
        sink = ltn12.sink.table(resp)
    };
    resp_body = table.concat(resp_body)
}
print(resp_body)